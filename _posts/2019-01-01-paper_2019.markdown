---
layout: post
title: NNWarp Neural Network-based Nonlinear Deformation
date: 2019-01-02 00:00:00 -0600
description: Ran Luo, Tianjia Shao, Huamin Wang, Weiwei Xu, Kun Zhou and Yin Yang, "NNWarp Neural Network-based Nonlinear Deformation", to appear in IEEE Transactions on Visualization and Computer Graphics, 2019. # Add post description (optional)
img: projects/papers/maple.gif # Add image post (optional)
tags: [Papers] # add tag
postimg: projects/papers/deepwarp2018.jpg
---

## Authors

Ran Luo, Tianjia Shao, Huamin Wang, Weiwei Xu, Kun Zhou and Yin Yang

## Abstract

NNWarp is a highly re-usable and efficient neural network (NN) based nonlinear deformable simulation framework. Unlike other machine learning applications such as image recognition, where different inputs have a uniform and consistent format (e.g. an array of all the pixels in an image), the input for deformable simulation is quite variable, high-dimensional, and parametrization-unfriendly. Consequently, even though the neural network is known for its rich expressivity of nonlinear functions, directly using an NN to reconstruct the force-displacement relation for general deformable simulation is nearly impossible. NNWarp obviates this difficulty by partially restoring the force-displacement relation via warping the nodal displacement simulated using a simplistic constitutive model - the linear elasticity. In other words, NNWarp yields an incremental displacement fix per mesh node based on a simplified (therefore incorrect) simulation result other than synthesizing the unknown displacement directly. We introduce a compact yet effective feature vector including geodesic, potential and digression to sort training pairs of per-node linear and nonlinear displacement. NNWarp is robust under different model shapes and tessellations. With the assistance of deformation substructuring, one NN training is able to handle a wide range of 3D models of various geometries. Thanks to the linear elasticity and its constant system matrix, the underlying simulator only needs to perform one pre-factorized matrix solve at each time step, which allows NNWarp to simulate large models in real time.